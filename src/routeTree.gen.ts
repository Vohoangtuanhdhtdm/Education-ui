/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestSSERouteImport } from './routes/test-SSE'
import { Route as TestRouteImport } from './routes/test'
import { Route as HomeRouteImport } from './routes/home'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TeacherTeacherRouteImport } from './routes/teacher/_teacher'
import { Route as TeacherTeacherIndexRouteImport } from './routes/teacher/_teacher.index'
import { Route as TeacherTeacherStudentRouteImport } from './routes/teacher/_teacher.student'
import { Route as TeacherTeacherClassRouteImport } from './routes/teacher/_teacher.class'
import { Route as TeacherTeacherToolsTeacherToolsRouteImport } from './routes/teacher/_teacher.tools/_teacher.tools'
import { Route as TeacherTeacherToolsTeacherToolsIndexRouteImport } from './routes/teacher/_teacher.tools/_teacher.tools.index'
import { Route as TeacherTeacherToolsTeacherToolsCreateLessonRouteImport } from './routes/teacher/_teacher.tools/_teacher.tools.createLesson'

const TeacherRouteImport = createFileRoute('/teacher')()

const TeacherRoute = TeacherRouteImport.update({
  id: '/teacher',
  path: '/teacher',
  getParentRoute: () => rootRouteImport,
} as any)
const TestSSERoute = TestSSERouteImport.update({
  id: '/test-SSE',
  path: '/test-SSE',
  getParentRoute: () => rootRouteImport,
} as any)
const TestRoute = TestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeacherTeacherRoute = TeacherTeacherRouteImport.update({
  id: '/_teacher',
  getParentRoute: () => TeacherRoute,
} as any)
const TeacherTeacherIndexRoute = TeacherTeacherIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TeacherTeacherRoute,
} as any)
const TeacherTeacherStudentRoute = TeacherTeacherStudentRouteImport.update({
  id: '/student',
  path: '/student',
  getParentRoute: () => TeacherTeacherRoute,
} as any)
const TeacherTeacherClassRoute = TeacherTeacherClassRouteImport.update({
  id: '/class',
  path: '/class',
  getParentRoute: () => TeacherTeacherRoute,
} as any)
const TeacherTeacherToolsTeacherToolsRoute =
  TeacherTeacherToolsTeacherToolsRouteImport.update({
    id: '/tools/_teacher/tools',
    path: '/tools/tools',
    getParentRoute: () => TeacherTeacherRoute,
  } as any)
const TeacherTeacherToolsTeacherToolsIndexRoute =
  TeacherTeacherToolsTeacherToolsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => TeacherTeacherToolsTeacherToolsRoute,
  } as any)
const TeacherTeacherToolsTeacherToolsCreateLessonRoute =
  TeacherTeacherToolsTeacherToolsCreateLessonRouteImport.update({
    id: '/createLesson',
    path: '/createLesson',
    getParentRoute: () => TeacherTeacherToolsTeacherToolsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/test': typeof TestRoute
  '/test-SSE': typeof TestSSERoute
  '/teacher': typeof TeacherTeacherRouteWithChildren
  '/teacher/class': typeof TeacherTeacherClassRoute
  '/teacher/student': typeof TeacherTeacherStudentRoute
  '/teacher/': typeof TeacherTeacherIndexRoute
  '/teacher/tools/tools': typeof TeacherTeacherToolsTeacherToolsRouteWithChildren
  '/teacher/tools/tools/createLesson': typeof TeacherTeacherToolsTeacherToolsCreateLessonRoute
  '/teacher/tools/tools/': typeof TeacherTeacherToolsTeacherToolsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/test': typeof TestRoute
  '/test-SSE': typeof TestSSERoute
  '/teacher': typeof TeacherTeacherIndexRoute
  '/teacher/class': typeof TeacherTeacherClassRoute
  '/teacher/student': typeof TeacherTeacherStudentRoute
  '/teacher/tools/tools/createLesson': typeof TeacherTeacherToolsTeacherToolsCreateLessonRoute
  '/teacher/tools/tools': typeof TeacherTeacherToolsTeacherToolsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/home': typeof HomeRoute
  '/test': typeof TestRoute
  '/test-SSE': typeof TestSSERoute
  '/teacher': typeof TeacherRouteWithChildren
  '/teacher/_teacher': typeof TeacherTeacherRouteWithChildren
  '/teacher/_teacher/class': typeof TeacherTeacherClassRoute
  '/teacher/_teacher/student': typeof TeacherTeacherStudentRoute
  '/teacher/_teacher/': typeof TeacherTeacherIndexRoute
  '/teacher/_teacher/tools/_teacher/tools': typeof TeacherTeacherToolsTeacherToolsRouteWithChildren
  '/teacher/_teacher/tools/_teacher/tools/createLesson': typeof TeacherTeacherToolsTeacherToolsCreateLessonRoute
  '/teacher/_teacher/tools/_teacher/tools/': typeof TeacherTeacherToolsTeacherToolsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/home'
    | '/test'
    | '/test-SSE'
    | '/teacher'
    | '/teacher/class'
    | '/teacher/student'
    | '/teacher/'
    | '/teacher/tools/tools'
    | '/teacher/tools/tools/createLesson'
    | '/teacher/tools/tools/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/home'
    | '/test'
    | '/test-SSE'
    | '/teacher'
    | '/teacher/class'
    | '/teacher/student'
    | '/teacher/tools/tools/createLesson'
    | '/teacher/tools/tools'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/home'
    | '/test'
    | '/test-SSE'
    | '/teacher'
    | '/teacher/_teacher'
    | '/teacher/_teacher/class'
    | '/teacher/_teacher/student'
    | '/teacher/_teacher/'
    | '/teacher/_teacher/tools/_teacher/tools'
    | '/teacher/_teacher/tools/_teacher/tools/createLesson'
    | '/teacher/_teacher/tools/_teacher/tools/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  HomeRoute: typeof HomeRoute
  TestRoute: typeof TestRoute
  TestSSERoute: typeof TestSSERoute
  TeacherRoute: typeof TeacherRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/teacher': {
      id: '/teacher'
      path: '/teacher'
      fullPath: '/teacher'
      preLoaderRoute: typeof TeacherRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test-SSE': {
      id: '/test-SSE'
      path: '/test-SSE'
      fullPath: '/test-SSE'
      preLoaderRoute: typeof TestSSERouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teacher/_teacher': {
      id: '/teacher/_teacher'
      path: '/teacher'
      fullPath: '/teacher'
      preLoaderRoute: typeof TeacherTeacherRouteImport
      parentRoute: typeof TeacherRoute
    }
    '/teacher/_teacher/': {
      id: '/teacher/_teacher/'
      path: '/'
      fullPath: '/teacher/'
      preLoaderRoute: typeof TeacherTeacherIndexRouteImport
      parentRoute: typeof TeacherTeacherRoute
    }
    '/teacher/_teacher/student': {
      id: '/teacher/_teacher/student'
      path: '/student'
      fullPath: '/teacher/student'
      preLoaderRoute: typeof TeacherTeacherStudentRouteImport
      parentRoute: typeof TeacherTeacherRoute
    }
    '/teacher/_teacher/class': {
      id: '/teacher/_teacher/class'
      path: '/class'
      fullPath: '/teacher/class'
      preLoaderRoute: typeof TeacherTeacherClassRouteImport
      parentRoute: typeof TeacherTeacherRoute
    }
    '/teacher/_teacher/tools/_teacher/tools': {
      id: '/teacher/_teacher/tools/_teacher/tools'
      path: '/tools/tools'
      fullPath: '/teacher/tools/tools'
      preLoaderRoute: typeof TeacherTeacherToolsTeacherToolsRouteImport
      parentRoute: typeof TeacherTeacherRoute
    }
    '/teacher/_teacher/tools/_teacher/tools/': {
      id: '/teacher/_teacher/tools/_teacher/tools/'
      path: '/'
      fullPath: '/teacher/tools/tools/'
      preLoaderRoute: typeof TeacherTeacherToolsTeacherToolsIndexRouteImport
      parentRoute: typeof TeacherTeacherToolsTeacherToolsRoute
    }
    '/teacher/_teacher/tools/_teacher/tools/createLesson': {
      id: '/teacher/_teacher/tools/_teacher/tools/createLesson'
      path: '/createLesson'
      fullPath: '/teacher/tools/tools/createLesson'
      preLoaderRoute: typeof TeacherTeacherToolsTeacherToolsCreateLessonRouteImport
      parentRoute: typeof TeacherTeacherToolsTeacherToolsRoute
    }
  }
}

interface TeacherTeacherToolsTeacherToolsRouteChildren {
  TeacherTeacherToolsTeacherToolsCreateLessonRoute: typeof TeacherTeacherToolsTeacherToolsCreateLessonRoute
  TeacherTeacherToolsTeacherToolsIndexRoute: typeof TeacherTeacherToolsTeacherToolsIndexRoute
}

const TeacherTeacherToolsTeacherToolsRouteChildren: TeacherTeacherToolsTeacherToolsRouteChildren =
  {
    TeacherTeacherToolsTeacherToolsCreateLessonRoute:
      TeacherTeacherToolsTeacherToolsCreateLessonRoute,
    TeacherTeacherToolsTeacherToolsIndexRoute:
      TeacherTeacherToolsTeacherToolsIndexRoute,
  }

const TeacherTeacherToolsTeacherToolsRouteWithChildren =
  TeacherTeacherToolsTeacherToolsRoute._addFileChildren(
    TeacherTeacherToolsTeacherToolsRouteChildren,
  )

interface TeacherTeacherRouteChildren {
  TeacherTeacherClassRoute: typeof TeacherTeacherClassRoute
  TeacherTeacherStudentRoute: typeof TeacherTeacherStudentRoute
  TeacherTeacherIndexRoute: typeof TeacherTeacherIndexRoute
  TeacherTeacherToolsTeacherToolsRoute: typeof TeacherTeacherToolsTeacherToolsRouteWithChildren
}

const TeacherTeacherRouteChildren: TeacherTeacherRouteChildren = {
  TeacherTeacherClassRoute: TeacherTeacherClassRoute,
  TeacherTeacherStudentRoute: TeacherTeacherStudentRoute,
  TeacherTeacherIndexRoute: TeacherTeacherIndexRoute,
  TeacherTeacherToolsTeacherToolsRoute:
    TeacherTeacherToolsTeacherToolsRouteWithChildren,
}

const TeacherTeacherRouteWithChildren = TeacherTeacherRoute._addFileChildren(
  TeacherTeacherRouteChildren,
)

interface TeacherRouteChildren {
  TeacherTeacherRoute: typeof TeacherTeacherRouteWithChildren
}

const TeacherRouteChildren: TeacherRouteChildren = {
  TeacherTeacherRoute: TeacherTeacherRouteWithChildren,
}

const TeacherRouteWithChildren =
  TeacherRoute._addFileChildren(TeacherRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  HomeRoute: HomeRoute,
  TestRoute: TestRoute,
  TestSSERoute: TestSSERoute,
  TeacherRoute: TeacherRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
